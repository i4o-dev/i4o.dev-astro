---
import { getCollection } from 'astro:content'

import Layout from '@/layouts/Layout.astro'
import SocialLinks from '@/components/SocialLinks.astro'
import PostCard from '@/components/PostCard.astro'
import ProjectCard from '@/components/ProjectCard.astro'
import Link from '@/components/shared/Link.astro'
import {
	convertAsteriskToStrongTag,
	MAP_COLOR_VARIANT_TO_TEXT,
} from '@/utils/helpers'

import presentation from '@/data/presentation'
import { projects } from '@/data/projects'
import theme from '@/data/theme'

const posts = await getCollection('posts')
---

<Layout>
	<main class='flex flex-col gap-20'>
		<article class='flex flex-col gap-8'>
			<h1 class='text-3xl text-neutral-100 font-serif'>{presentation.title}</h1>
			<h2
				class='max-w-[60ch] leading-6'
				set:html={convertAsteriskToStrongTag(presentation.description)}
			/>
			<SocialLinks />
		</article>

		<article class='flex flex-col gap-8'>
			<header class='flex w-full flex-row justify-between gap-2'>
				<h3 class='text-lg text-neutral-100'>Latest Posts</h3>
				<Link
					href='/blog'
					label='See all posts'
					isUnderline
					target='_self'
				/>
			</header>
			{posts.length === 0 && <p>Soon, stay connected ðŸ‘€...</p>}

			<section class='flex flex-col gap-4 md:flex-row md:flex-wrap'>
				{
					posts.length !== 0 &&
						posts
							.slice(0, 2)
							.map((post) => (
								<PostCard
									publishedAt={post.data.publishedAt}
									title={post.data.title}
									description={post.data.description}
									slug={post.slug}
								/>
							))
				}
			</section>
		</article>

		<article class='flex flex-col gap-8'>
			<header class='flex w-full flex-row justify-between gap-2'>
				<h3 class='text-lg text-neutral-100'>Featured Projects</h3>
				<Link
					href='/projects'
					label='See all projects'
					isUnderline
					target='_self'
				/>
			</header>
			{projects.length === 0 && <p>Oops, I must work^^^^^</p>}

			<section class='flex flex-col gap-4'>
				{
					projects.length !== 0 &&
						projects
							.filter((project) => project.isFeatured)
							.map((project) => <ProjectCard {...project} />)
				}
			</section>
		</article>

		<article class='flex flex-col gap-8'>
			<header class='flex w-full flex-row justify-between gap-2'>
				<h3 class='text-lg text-neutral-100'>Get in touch</h3>
			</header>
			<p>
				Email me at <Link
					href={`mailto:${presentation.mail}`}
					label={presentation.mail}
				/> or follow me via my social links.
			</p>

			<SocialLinks />
		</article>
	</main>
</Layout>
