---
import { getCollection } from 'astro:content'
import { format } from 'date-fns'
import Layout from '@/layouts/Layout.astro'
import { sortAndGroupPostsByYear } from '@/utils/helpers'

const allPosts = await getCollection('posts')
const onlyPublished = allPosts.filter((post) => !post.data.draft)
const groupedPosts = sortAndGroupPostsByYear(onlyPublished)
const currentYear = new Date().getFullYear()
const sortedYears = Object.keys(groupedPosts).sort(
	(a, b) => parseInt(b, 10) - parseInt(a, 10)
)
---

<Layout title='Blog' description="Thoughts, ideas, and stories about web dev, indiehacking, and personal growth.">
	<main class='flex flex-col gap-20'>
		<article class='flex flex-col gap-8'>
			<h1 class='text-3xl text-neutral-100 font-serif'>Blog</h1>
			<section class='flex flex-col gap-4'>
				{
					sortedYears.map((year) => (
						<div
							class='mb-4 flex flex-col items-start gap-6'
							key={`year-${year}`}
						>
							{currentYear !== Number(year) ? (
								<h2 class='text-2xl m-0 mt-4 text-neutral-100 font-serif'>
									{year}
								</h2>
							) : null}
							<div class='flex flex-col items-start gap-4'>
								{groupedPosts[year].map((post, index) => (
									<div
										class='flex flex-wrap items-center justify-start gap-2 text-left'
										key={`post-${index}`}
									>
										<a
											href={`/blog/${post.slug}`}
											class:list={{
												['hover:text-neutral-100 m-0 text-base font-normal leading-6']: true,
											}}
										>
											{post.data.title}
										</a>
										<span class='text-xs italic'>
											{format(
												new Date(
													post.data.date_published
												),
												'MMM dd'
											)}
										</span>
									</div>
								))}
							</div>
						</div>
					))
				}
			</section>
		</article>
	</main>
</Layout>
